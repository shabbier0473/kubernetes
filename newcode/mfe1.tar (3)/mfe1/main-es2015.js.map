{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;;AAQnC,MAAM,YAAY;IAWrB,YAA2B,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAVjD,UAAK,GAAG,MAAM,CAAC;QAEP,oBAAe,GAAG,sFAAsF,CAAC;QACzG,0BAAqB,GAAG,uFAAuF,CAAC;QAChH,wBAAmB,GAAG,qFAAqF,CAAC;QAI7G,aAAQ,GAAW,EAAE,CAAC;IAI7B,CAAC;IAEM,kBAAkB;QACrB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,IAAI,IAAI,CAAC,QAAQ,IAAI,SAAS,EAAE;YAC5B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE;gBACtC,OAAO,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;aAC7B,CAAC;iBACG,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;gBACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACzB,CAAC,CAAC,CAAC;SACV;aACI;YACD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC;iBACpC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;gBACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACzB,CAAC,CAAC,CAAC;SACV;IAEL,CAAC;IAEM,uBAAuB;QAC1B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,IAAI,IAAI,CAAC,QAAQ,IAAI,SAAS,EAAE;YAC5B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,qBAAqB,EAAE;gBAC5C,OAAO,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;aAC7B,CAAC;iBACG,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;gBACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACzB,CAAC,CAAC,CAAC;SACV;aACI;YACD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC;iBAC1C,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;gBACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACzB,CAAC,CAAC,CAAC;SACV;IAEL,CAAC;IAEM,qBAAqB;QACxB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,IAAI,CAAC,QAAQ,IAAI,SAAS,EAAE;YAC5B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,EAAE;gBAC1C,OAAO,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;aAC7B,CAAC;iBACG,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;gBACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACzB,CAAC,CAAC,CAAC;SACV;aACI;YACD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;iBACxC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;gBACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACzB,CAAC,CAAC,CAAC;SACV;IAEL,CAAC;;wEA5EQ,YAAY;4FAAZ,YAAY;QCRzB,sEACI;QAAA,uDACJ;QAAA,4DAAM;QACN,sEACE;QAAA,wEAAQ;QAAA,sEAAU;QAAA,4DAAQ;QAC1B,2EACF;QADqD,kLAAsB;QAAzE,4DACF;QAAA,4DAAM;QACN,sEACE;QAAA,2EACA;QAD+C,mIAAS,wBAAoB,IAAC;QAA7E,4DACA;QAAA,2EACA;QAD6C,mIAAS,6BAAyB,IAAC;QAAhF,4DACA;QAAA,2EACF;QAD2C,mIAAS,2BAAuB,IAAC;QAA1E,4DACF;QAAA,4DAAM;QACN,uEACA;QAAA,wDACA;;QAAA,4DAAM;QACN,4EAA+B;;QAd3B,0DACJ;QADI,sFACJ;QAGqD,0DAAsB;QAAtB,iFAAsB;QAQ3E,0DACA;QADA,4JACA;;6FDNa,YAAY;cALxB,uDAAS;eAAC;gBACP,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACtC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACS;AACX;;AAetC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YANJ;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,0DAAW;SACZ;mIAIU,SAAS,mBAXlB,2DAAY,aAGZ,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;QAChB,0DAAW;6FAKF,SAAS;cAbrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,qEAAgB;oBAChB,0DAAW;iBACZ;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    title = 'mfe1';\n\n    private REST_API_SERVER = \"http://b131d897-default-bff-56cf-2100021554.us-east-1.elb.amazonaws.com/api/bff/test\";\n    private OTHER_REST_API_SERVER = \"http://b131d897-default-bff-56cf-2100021554.us-east-1.elb.amazonaws.com/api/bff/other\";\n    private ALL_REST_API_SERVER = \"http://b131d897-default-bff-56cf-2100021554.us-east-1.elb.amazonaws.com/api/bff/all\";\n\n    public response: any;\n\n    public username: string = \"\";\n\n    public constructor(private httpClient: HttpClient) {\n\n    }\n\n    public getServiceResponse() {\n        console.log(\"testing\");\n        if (this.username == \"testing\") {\n            this.httpClient.get(this.REST_API_SERVER, {\n                headers: { 'team': 'sqe' }\n            })\n                .subscribe((data: any) => {\n                    console.log(data);\n                    this.response = data;\n                });\n        }\n        else {\n            this.httpClient.get(this.REST_API_SERVER)\n                .subscribe((data: any) => {\n                    console.log(data);\n                    this.response = data;\n                });\n        }\n\n    }\n\n    public getOtherServiceResponse() {\n        console.log(\"other\");\n        if (this.username == \"testing\") {\n            this.httpClient.get(this.OTHER_REST_API_SERVER, {\n                headers: { 'team': 'sqe' }\n            })\n                .subscribe((data: any) => {\n                    console.log(data);\n                    this.response = data;\n                });\n        }\n        else {\n            this.httpClient.get(this.OTHER_REST_API_SERVER)\n                .subscribe((data: any) => {\n                    console.log(data);\n                    this.response = data;\n                });\n        }\n\n    }\n\n    public getAllServiceResponse() {\n        console.log(\"all\");\n        if (this.username == \"testing\") {\n            this.httpClient.get(this.ALL_REST_API_SERVER, {\n                headers: { 'team': 'sqe' }\n            })\n                .subscribe((data: any) => {\n                    console.log(data);\n                    this.response = data;\n                });\n        }\n        else {\n            this.httpClient.get(this.ALL_REST_API_SERVER)\n                .subscribe((data: any) => {\n                    console.log(data);\n                    this.response = data;\n                });\n        }\n\n    }\n}\n","<div>\n    {{title}}\n</div>\n<div>\n  <label> User Name </label>\n  <input type=\"text\" name=\"user_name\" id=\"user_name\" [(ngModel)]=\"username\" />\n</div>\n<div>\n  <input type=\"button\" name=\"submit\" id=\"submit\" (click)=\"getServiceResponse()\" value=\"submit\"/>\n  <input type=\"button\" name=\"other\" id=\"other\" (click)=\"getOtherServiceResponse()\" value=\"other\"/>\n  <input type=\"button\" name=\"all\" id=\"all\" (click)=\"getAllServiceResponse()\" value=\"all\"/>\n</div>\n<div>\n{{response|json}}\n</div>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}